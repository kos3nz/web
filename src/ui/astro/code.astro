---
import { parse } from 'node-html-parser'

// Get slot component as html string
const rawHtml = await Astro.slots.render('default')

// Parse back to html element
const html = parse(rawHtml)

// Get code block filenames
const codeTitles = Array.from(
  html.querySelectorAll('div[data-rehype-pretty-code-title]'),
).map((elem) => elem.text)

// Get code block elements
const codeBlocks = Array.from(html.querySelectorAll('pre'))

if (codeTitles.length !== codeBlocks.length)
  throw new Error('Each code block needs a title')
---

<div>
  <astro-code data-titles={codeTitles}>
    <div
      class="relative flex overflow-x-auto rounded-t-md bg-[#333547]/70 pt-3"
    >
      {
        codeTitles.map((title, i) => (
          <button
            type="button"
            class:list={[
              'tab',
              'px-3 py-1.5 text-sm text-slate-400 shrink-0 rounded-t-md transition-colors duration-300 hover:text-slate-100',
              i === 0 && 'active',
            ]}
          >
            {title}
          </button>
        ))
      }

      <span
        id="bar"
        class="pointer-events-none absolute bottom-0 left-0 h-[2px] origin-left rounded bg-gradient-to-tr from-indigo-500 to-cyan-500 transition-transform duration-300"
      ></span>
    </div>
    {
      codeBlocks.map((code, i) => (
        <div
          class="relative"
          data-title={codeTitles[i]}
          data-code-visible={i === 0 ? 'show' : 'hidden'}
        >
          {/* Code Block */}
          {code}

          {/* Copy to Clipboard*/}
          <div class="copy-btn absolute right-2 top-2">
            <span class="invisible absolute -top-6 right-[-15px] rounded-lg border border-slate-400/20 bg-slate-200 px-1.5 py-[3px] text-xs font-semibold text-slate-900 opacity-0 transition duration-300">
              Copied!
            </span>

            <button
              aria-label="Copy to clipboard"
              title="Copy to clipboard"
              class="group relative p-1"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                fill="none"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="h-5 w-5 text-slate-500 transition-colors duration-300 group-hover:text-slate-100"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
                <rect x="9" y="3" width="6" height="4" rx="2" />
                <path d="M9 12h6" />
                <path d="M9 16h6" />
              </svg>
            </button>
          </div>
        </div>
      ))
    }
  </astro-code>
</div>

<style>
  div[data-code-visible='hidden'] {
    display: none;
  }

  div[data-code-visible='show'] {
    display: block;
  }

  button.active {
    font-weight: 500;
    color: #f2f6fa;
    cursor: default;
    background-color: #222436;
    /* border-bottom: 1.5px solid #06b6d4; */
  }

  span.copied {
    opacity: 1;
    transform: translateY(-8px);
  }
</style>

<style is:global>
  [data-code-visible] pre {
    border-radius: 0 0 0.375rem 0.375rem;
  }
</style>

<script src="./scripts/code.ts"></script>
