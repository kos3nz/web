---
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import Layout from 'layouts/base.astro'
import Pre from 'ui/astro/pre.astro'
import HeadingsDesktop from 'ui/solidjs/headings-desktop.tsx'
import HeadingsMobile from 'ui/solidjs/headings-mobile.tsx'
import Tag from 'ui/solidjs/tag.tsx'
import DateTime from 'ui/solidjs/date-time.tsx'
import { createCloudinaryImageSrc } from 'utils/image'

interface Props {
  entry: CollectionEntry<'blog'>
}

type AstroHeading = {
  depth: number
  slug: string
  text: string
}

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const allPosts = await getCollection('blog', ({ data }) => {
    return data.draft !== true
  })

  return allPosts.map((post) => ({
    params: { slug: post.slug },
    props: { entry: post },
  }))
}

// 2. When it's time to render, you can get the entry directly from the prop
const { entry } = Astro.props
const { Content, headings: astroHeadings } = await entry.render()

const headings = (astroHeadings as AstroHeading[]).map((heading) => {
  return {
    depth: heading.depth,
    hash: `#${heading.slug}`,
    text: heading.text.split('#')[1],
  }
})

const imageSrc = createCloudinaryImageSrc({
  title: entry.data.title,
  tags: entry.data.tags,
})
---

<Layout title={entry.data.title}>
  <HeadingsMobile headings={headings} client:visible />
  <div class="lg:flex lg:flex-row-reverse lg:gap-x-6">
    <HeadingsDesktop headings={headings} client:visible />
    <div class="min-w-0 flex-1">
      <DateTime dateTime={entry.data.publishedDate} />

      <h1
        class="mb-6 mt-4 text-3xl font-bold leading-[2.5rem] md:text-[36px] md:leading-[2.725rem]"
      >
        {entry.data.title}
      </h1>

      <div class="mb-12 flex gap-x-2">
        {entry.data.tags.map((tag) => <Tag name={tag} />)}
      </div>

      <article
        class="!prose-invert prose-slate prose max-w-none prose-code:rounded-md prose-code:p-1 prose-pre:mt-0"
      >
        <Content components={{ pre: Pre }} />
      </article>
    </div>
  </div>
</Layout>
